"""first migration

Revision ID: fe03dea0363a
Revises: 
Create Date: 2023-04-14 17:41:32.018030

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fe03dea0363a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('genre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('publisher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('registered_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=250), nullable=False),
    sa.Column('description', sa.String(length=5000), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('publisher_id', sa.Integer(), nullable=True),
    sa.Column('date_publication', sa.TIMESTAMP(), nullable=True),
    sa.Column('date_created_post', sa.TIMESTAMP(), nullable=True),
    sa.Column('num_pages', sa.Integer(), nullable=False),
    sa.Column('permit', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['publisher_id'], ['publisher.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book_author',
    sa.Column('book', sa.Integer(), nullable=True),
    sa.Column('author', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['author.id'], ),
    sa.ForeignKeyConstraint(['book'], ['book.id'], )
    )
    op.create_table('book_genre',
    sa.Column('book', sa.Integer(), nullable=True),
    sa.Column('genre', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book'], ['book.id'], ),
    sa.ForeignKeyConstraint(['genre'], ['genre.id'], )
    )
    op.create_table('dislikes',
    sa.Column('book', sa.Integer(), nullable=True),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book'], ['book.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], )
    )
    op.create_table('likes',
    sa.Column('book', sa.Integer(), nullable=True),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book'], ['book.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('likes')
    op.drop_table('dislikes')
    op.drop_table('book_genre')
    op.drop_table('book_author')
    op.drop_table('book')
    op.drop_table('user')
    op.drop_table('publisher')
    op.drop_table('genre')
    op.drop_table('category')
    op.drop_table('author')
    # ### end Alembic commands ###
